[tox]
envlist = py37

[testenv]
passenv =
    S3_PYPI_HOST
    CI_PROJECT_DIR
setenv =
    S3_PYPI_HOST = {env:S3_PYPI_HOST:hyp3-pypi.s3-website-us-east-1.amazonaws.com}
    CI_PROJECT_DIR = {env:CI_PROJECT_DIR:.tox}
conda_deps =
    boto3
    gdal
    imageio
    importlib_metadata
    lxml
    matplotlib
    netCDF4
    numpy
    pillow
    proj
    psycopg2
    pyshp
    pytest
    pytest-console-scripts
    pytest-cov
    requests
    scipy
    setuptools
    six
    statsmodels
    wheel
conda_channels =
    conda-forge
install_command =
    python -m pip install {opts} --trusted-host "{env:S3_PYPI_HOST:}" --extra-index-url "http://{env:S3_PYPI_HOST:}" {packages}
deps =
    hyp3lib
    hyp3proclib
    s3pypi
    setuptools-scm[toml]
whitelist_externals =
    /usr/bin/bash
    /bin/bash
commands =
    bash -ec 'python -m pip freeze > {env:CI_PROJECT_DIR:}/pip_freeze_{env:TOX_ENV_NAME:}.txt'
    bash -ec 'conda list --export > {env:CI_PROJECT_DIR:}/conda_export_{env:TOX_ENV_NAME:}.txt'
    pytest {posargs}

[testenv:py37-verify]
passenv =
    S3_PYPI_HOST
    SDIST_VERSION
skipinstall =
    true
commands =
    python3 -m pip install hyp3_rtc_gamma --trusted-host "{env:S3_PYPI_HOST:}" --extra-index-url "http://{env:S3_PYPI_HOST:}"
    bash -ec 'if [[ {env:SDIST_VERSION:} != $(python3 -c "import hyp3_rtc_gamma; print(hyp3_rtc_gamma.__version__);") ]]; then exit 1; else exit 0; fi'
